<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cpp.user.mapper.UserCourseContentMapper">
    <select id="getLatest" parameterType="cpp.user.po.UserCourseContent" resultType="cpp.user.po.UserCourseContent">
        select *
        from user_course_content
        where courseId = #{courseId} and userId = #{userId}
        order by updateTime desc
        limit 0, 1
    </select>

    <update id="modify" parameterType="cpp.user.po.UserCourseContent">
        update user_course_content
        set updateTime = #{updateTime}
        where courseId = #{courseId} and contentId = #{contentId} and userId = #{userId}
    </update>

    <insert id="add" parameterType="cpp.user.po.UserCourseContent">
        insert into user_course_content (userId, courseId, contentId)
        values (#{userId}, #{courseId}, #{contentId})
    </insert>

    <select id="getByUserIdAndContentId" parameterType="cpp.user.po.UserCourseContent"
            resultType="cpp.user.po.UserCourseContent">
        select *
        from user_course_content
        where userid = #{userId} and contentId = #{contentId}
    </select>

    <select id="listByUserId" parameterType="int" resultType="cpp.user.po.UserCourseContent">
        select
            user_course_content.*,
            course.name         courseName,
            course_content.name contentName
        from user_course_content
            inner join course on user_course_content.courseId = course.id
            inner join course_content on user_course_content.contentId = course_content.id
        where user_course_content.userId = #{userId}
        order by updateTime desc
    </select>

    <select id="getByUserIdAndCourseIdAndContentIdEquals0" resultType="cpp.user.po.UserCourseContent">
        select * from user_course_content
        where courseId = #{courseId} and contentId = 0 and userId = #{userId}
    </select>
</mapper>
